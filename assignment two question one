#include<stdio.h> 
#include <stdbool.h> 
#define SIZE 24
#define nRows 8
#define nCols 3
// PROTOTYPES
void print_array(int array[], int length);

void set_array(int array[], int length);
void rem_align(int arr[],int length, int pos);
void insert_align(int arr[],int length, int pos, int value);
void reshape(int arr[],int length,int arr2d[nRows][nCols]);
void print_matrix(int mat[][nCols], int rows);
void print_trans_matrix(int arr2d[nRows][nCols]);
bool found_duplicate(int arr[],int length);
int main()
{
int arr[SIZE]={1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24};
int arr2d[nRows][nCols];
reshape(arr,SIZE,arr2d);
print_matrix(arr2d,8);
}

void print_array(int array[], int length){
   for(int i=0;i<length; i++)
      printf("array[%d]= %d\n", i, array[i]);
}
void set_array(int array[], int length)
{
	for(int i=0;i<length;i++){
		array[i]=i;
	}
}
void rem_align(int arr[],int length, int pos){
for(int i=pos;i<length-1;i++){
arr[i]=arr[i+1];
}
}
void insert_align(int arr[],int length, int pos, int value){
for(int i=length-1;i>pos;i--){
    arr[i]=arr[i-1];
    
}
    

arr[pos]=value;
}

void reshape(int arr[],int length,int arr2d[nRows][nCols]){
		if(length!=nRows*nCols){
		    printf("ERROR! the length isnt correct");
		  return;
		}
        else{
        for(int i=0;i<nRows;i++){
            arr2d[i][0]=arr[i];
        
        }
        
        
        }

}
void print_matrix(int mat[][nCols], int rows){
   for(int i=0;i<rows; i++){
    for(int j=0;j<nCols; j++)
         printf("mat[%d][%d]= %d\n", i,j, mat[i][j]);
    puts("");     
   }     
}
void print_trans_matrix(int arr2d[nRows][nCols]){
    for(int i=0;i<nRows;i++){
    for(int j=0;j<nCols; j++)
         printf("mat[%d][%d]= %d\n",i,j, arr2d[i][j]);
    puts("\n");   
}
}

bool found_duplicate(int arr[],int length){
for(int i=0;i<length-1;i++){
    if(arr[i]==arr[i+1]){
        return true;
    }
